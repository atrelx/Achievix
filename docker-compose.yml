services:
  mysql:
    image: mysql:8.0
    container_name: achievix-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql
#      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - achievix-network

  kafka:
    image: bitnami/kafka
    container_name: achievix-kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
    volumes:
      - ./kafka:/bitnami/kafka
    networks:
      - achievix-network

  backend:
    build:
      context: ./backend/Achievix
      dockerfile: Dockerfile
    container_name: achievix-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_ROOT_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      JWT_SECRET: ${JWT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_FROM_EMAIL_ADDRESS: ${SENDGRID_FROM_EMAIL_ADDRESS}
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - achievix-network

  frontend:
    build:
      context: ./frontend/Achievix
      dockerfile: Dockerfile
    container_name: achievix-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - achievix-network

volumes:
  mysql-data:

networks:
  achievix-network:
    driver: bridge